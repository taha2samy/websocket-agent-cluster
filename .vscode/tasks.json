{
  "version": "2.0.0",
  "tasks": [
    {
      "label": "Docker: Rebuild & Restart Services",
      "detail": "Builds images from scratch and starts all services in the background.",
      "type": "shell",
      "command": "docker-compose -f docker/docker-compose.yml build --no-cache && docker-compose -f docker/docker-compose.yml up -d",
      "group": {
        "kind": "build",
        "isDefault": true
      },
      "presentation": {
        "echo": true,
        "reveal": "always",
        "focus": false,
        "panel": "dedicated",
        "showReuseMessage": false,
        "clear": true
      },
      "problemMatcher": []
    },
    {
      "label": "Docker: Start Services",
      "detail": "Starts all services in the background using existing images.",
      "type": "shell",
      "command": "docker-compose -f docker/docker-compose.yml up -d",
      "presentation": {
        "echo": true,
        "reveal": "always",
        "focus": false,
        "panel": "dedicated",
        "showReuseMessage": false,
        "clear": true
      },
      "problemMatcher": []
    },
    {
      "label": "Docker: Stop & Remove Services",
      "detail": "Stops and removes all containers, networks, and volumes.",
      "type": "shell",
      "command": "docker-compose -f docker/docker-compose.yml down",
      "presentation": {
        "echo": true,
        "reveal": "always",
        "focus": false,
        "panel": "dedicated",
        "showReuseMessage": false,
        "clear": true
      },
      "problemMatcher": []
    },
    {
      "label": "Docker: View Service Logs",
      "detail": "Follows the logs for all running services.",
      "type": "shell",
      "command": "docker-compose -f docker/docker-compose.yml logs -f",
      "presentation": {
        "echo": true,
        "reveal": "always",
        "focus": true,
        "panel": "dedicated",
        "showReuseMessage": false,
        "clear": false
      },
      "problemMatcher": []
    },
    {
        "label": "scripts: Load Tokens and Permissions into SQLite",
        "type": "shell",
        "detail": "load test token and permissions into SQLite database as test data to test the WebSocket server", 
        "command": "pipenv run python ./scripts/expermintal_data_on_sqlite.py",
        "group": {
            "kind": "build",
            "isDefault": true
        },
        "presentation": {
            "echo": true,
            "reveal": "always",
            "focus": false,
            "panel": "dedicated",
            "clear": true
        },
        "problemMatcher": []
    }

  ]
}