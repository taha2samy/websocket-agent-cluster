{
  "version": "2.0.0",
  "tasks": [
    {
      "label": "Docker: Rebuild & Restart Services",
      "detail": "Builds images from scratch and starts all services in the background.",
      "type": "shell",
      "options": {
        "statusbar": {"hide" : "true"}
      },
      "command": "docker compose -f docker/docker-compose.yml build --no-cache && docker compose -f docker/docker-compose.yml up -d",
      "group": {
        "kind": "build",
        "isDefault": true
      },
      
      "presentation": {
        "echo": true,
        "reveal": "always",
        "focus": false,
        "panel": "dedicated",
        "showReuseMessage": false,
        "clear": true
      },
      "problemMatcher": []
    },
        {
      "label": "WebSocket Agent: Start Services",
      "detail": "Start WebSocket Agent",
      "type": "shell",
      "options": {
        "statusbar": {"hide" : "true"}
      },
      "command": "pipenv run python ./main.py runserver --port ${input:portNumber}",
      "group": {
        "kind": "build",
        "isDefault": true
      },
      
      "presentation": {
        "echo": true,
        "reveal": "always",
        "focus": false,
        "panel": "dedicated",
        "showReuseMessage": false,
        "clear": true
      },
      "problemMatcher": []
    },






    {
      "label": "Docker: Start Services",
      "detail": "Starts all services in the background using existing images.",
      "type": "shell",
    "options": {
        "statusbar": {"hide" : "true"}
      },
      "command": "docker compose -f docker/docker-compose.yml up -d",
      "presentation": {
        "echo": true,
        "reveal": "always",
        "focus": false,
        "panel": "dedicated",
        "showReuseMessage": false,
        "clear": true
      },
      "problemMatcher": []
    },
    {
      "label": "Docker: Stop & Remove Services",
      "detail": "Stops and removes all containers, networks, and volumes.",
      "type": "shell",
    "options": {
        "statusbar": {"hide" : "true"}
      },
      "command": "docker compose -f docker/docker-compose.yml down",
      "presentation": {
        "echo": true,
        "reveal": "always",
        "focus": false,
        "panel": "dedicated",
        "showReuseMessage": false,
        "clear": true
      },
      "problemMatcher": []
    },
    {
      "label": "Docker: View Service Logs",
      "detail": "Follows the logs for all running services.",
      "type": "shell",
      "command": "docker compose -f docker/docker-compose.yml logs -f",
    "options": {
        "statusbar": {"hide" : "true"}
      },
      "presentation": {
        "echo": true,
        "reveal": "always",
        "focus": true,
        "panel": "dedicated",
        "showReuseMessage": false,
        "clear": false
      },
      "problemMatcher": []
    },
    {
      "label": "Docker: docker compose redis only up ",
      "detail": "Follows the logs for all running services.",
      "type": "shell",
      "command": "docker compose -f 'docker/redis only/docker-compose.yml' -up -d",
    "options": {
        "statusbar": {"hide" : "true"}
      },
      "presentation": {
        "echo": true,
        "reveal": "always",
        "focus": true,
        "panel": "dedicated",
        "showReuseMessage": false,
        "clear": false
      },
      "problemMatcher": []
    },
        {
      "label": "Docker: docker compose redis only down",
      "detail": "Follows the logs for all running services.",
      "type": "shell",
      "command": "docker compose -f 'docker/redis only/docker-compose.yml' down",
    "options": {
        "statusbar": {"hide" : "true"}
      },
      "presentation": {
        "echo": true,
        "reveal": "always",
        "focus": true,
        "panel": "dedicated",
        "showReuseMessage": false,
        "clear": false
      },
      "problemMatcher": []
    },
    {
        "label": "scripts: Load Tokens and Permissions into SQLite",
        "type": "shell",
        "options": {
        "statusbar": {"hide" : "true"}
      },
        "detail": "load test token and permissions into SQLite database as test data to test the WebSocket server",
        "command": "pipenv run python ./scripts/expermintal_data_on_sqlite.py",
        "group": {
            "kind": "build",
            "isDefault": true
        },
        "presentation": {
            "echo": true,
            "reveal": "always",
            "focus": false,
            "panel": "dedicated",
            "clear": true
        },
        "problemMatcher": []
    },
    {
      "label": "Run WebSocket client (test) (Ask for Port)",
      "type": "shell",
      "detail": "Runs the WebSocket client, prompting for a port number.",
      "command": "pipenv run flask run --port ${input:portNumber}",
      "options": {
        "statusbar": {"hide" : "true"},
        "cwd": "${workspaceFolder}/client/client flask"
      },
      "problemMatcher": [],
      "presentation": {
        "reveal": "always",
        "panel": "new",
        "clear": true
      },
    }

  ],
  "inputs": [
    {
      "id": "portNumber",
      "type": "promptString",
      "description": "Please enter the port number for the WebSocket server.",
      "default": "8000"
    }
  ]
}